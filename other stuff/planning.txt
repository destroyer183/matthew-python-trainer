

have a main python file with an upper class
    when run,
    make all level folders hidden
    make all gui-related files & folders hidden

    prompt user to sign in or create an account
    create a new account file for a new account
        filename will be username
        password will be the first characters in the file, with the end of the password represented with a terminating characters

    load new info by picking a file based on the username input, and compare inputted password to password on account

    display progress



store all login info and progress data in a file with no file type
to write to file:
    take string
    convert to integers
    iterate over every element and unhexify with int('string', 16)
    join list of strings
    unhexlify to convert to bytes
    write

to read from file:
    take bytes
    hexlify to convert to byte of numbers
    take the portion [2:len(string) - 1] to remove extra quotes and byte prefix
    split string into groups of two numbers
    convert numbers back to strings
    done

encryption for verification bytes:
    take integer
    convert to hexidecimal
    convert each char number to integer
    unhexlify
    write


to read encryption for verification bytes:
    take byte
    hexlify
    take the portion [2:len(string) - 1] to remove extra quotes and byte prefix
    convert each integer to a char (should return two numbers)
    join numbers
    unhexify
    done



make subclasses for each type of problem (math, lists, strings, loops, dictionaries)
use the subclasses to make guis for each type of problem
    when run, 
    display a list of all the problems, with either a green(complete), grey(incomplete) or red(incorrect) circle next to it
    count every correct solution, and when all solutions are correct, display something to show this
    when every problem type has been completed for a difficulty level, 



use the subclasses to give inputs to matthew's code and my code, and compare inputs